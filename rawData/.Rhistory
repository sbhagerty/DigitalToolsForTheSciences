install.packages('dplyr')
library(dplyr)
?filter
??filter
max(x)
x<-c(1,3,4,6)
max(x)
install.packages('gapminder')
library(gapminder)
names(gamplinder)
names(gapminder)
ggplot(gapminder, aes(x=year, y=pop))+geom_point()
library(ggplot2)
install.packages(ggplot2)
install.packages(ggplot2'')
install.packages('ggplot2')
ggplot(gapminder, aes(x=year, y=pop))+geom_point()
ggplot(gapminder, aes(x=year, y=pop))+geom_point()
library(ggplot)
library(ggplot2)
ggplot(gapminder, aes(x=year, y=pop))+geom_point()
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "~/Desktop/Biometry/Lab 3 Data-20180413") #to set your working directory for the whole document so you don't have to set it in each code chunk
files=list.files();files[files=="guppies.csv"]
setwd("~/Desktop/GitHub/Digital-Tools-for-the-Sciences")
library(tidyverse)
CO2 <- read.csv('CO2_perYear.csv', skip=4)
CO2_metadata <- read.csv('CO2_countryMetaData.csv')
year<-c() # this is where the numeric year values will go
year_badFormat<-CO2 %>% select(starts_with("X")) %>% names() #creating a vector of the years as they are in the dataframe
#This for loop will take each object in year_badformat and get rid of the X and convert it to a numeric then add it to the year vector
for( i in 1:length(year_badFormat)){
year[i] = as.numeric(substring(year_badFormat[i], 2,5))
}
#Now we can change the column names to the year values as numeric
names(CO2)[5:length(names(CO2))]<-year
#Then get remove the objects we no longer need from memory
rm(year,i, year_badFormat)
year<-c() # this is where the numeric year values will go
year_badFormat<-CO2 %>% select(starts_with("X")) %>% names() #creating a vector of the years as they are in the dataframe
#This for loop will take each object in year_badformat and get rid of the X and convert it to a numeric then add it to the year vector
for( i in 1:length(year_badFormat)){
year[i] = as.numeric(substring(year_badFormat[i], 2,5))
}
#Now we can change the column names to the year values as numeric
names(CO2)[5:length(names(CO2))]<-year
#Then get remove the objects we no longer need from memory
rm(year,i, year_badFormat)
CO2<-CO2[complete.cases(CO2),]
CO2 <- CO2 %>%select(-c('Country.Code', 'Indicator.Name', 'Indicator.Code'))
library(tidyverse)
CO2 <- read.csv('CO2_perYear.csv', skip=4)
CO2_metadata <- read.csv('CO2_countryMetaData.csv')
year<-c() # this is where the numeric year values will go
year_badFormat<-CO2 %>% select(starts_with("X")) %>% names() #creating a vector of the years as they are in the dataframe
#This for loop will take each object in year_badformat and get rid of the X and convert it to a numeric then add it to the year vector
for( i in 1:length(year_badFormat)){
year[i] = as.numeric(substring(year_badFormat[i], 2,5))
}
#Now we can change the column names to the year values as numeric
names(CO2)[5:length(names(CO2))]<-year
#Then get remove the objects we no longer need from memory
rm(year,i, year_badFormat)
CO2<-CO2[complete.cases(CO2),]
#CO2 <- CO2 %>%select(-c('Country.Code', 'Indicator.Name', 'Indicator.Code'))
head(CO2)
head(CO2_metadata)
View(CO2_metadata)
CO2 <- inner_join(CO2, CO2_metadata, by=c('Country.Name'=='TableName'))
View(CO2_metadata)
View(CO2)
CO2 <- inner_join(CO2, CO2_metadata, by=Country.Code)
View(CO2)
View(CO2_metadata)
CO2 <- inner_join(CO2, CO2_metadata, by='Country.Code')
View(CO2)
columns(CO2)
column.names(CO2)
names(CO2)
View(CO2)
#merge the data frames
CO2 <- left_join(CO2, CO2_metadata, by='Country.Code')
CO2
library(tidyverse)
CO2 <- read.csv('CO2_perYear.csv', skip=4)
CO2_metadata <- read.csv('CO2_countryMetaData.csv')
year<-c() # this is where the numeric year values will go
year_badFormat<-CO2 %>% select(starts_with("X")) %>% names() #creating a vector of the years as they are in the dataframe
#This for loop will take each object in year_badformat and get rid of the X and convert it to a numeric then add it to the year vector
for( i in 1:length(year_badFormat)){
year[i] = as.numeric(substring(year_badFormat[i], 2,5))
}
#Now we can change the column names to the year values as numeric
names(CO2)[5:length(names(CO2))]<-year
#Then get remove the objects we no longer need from memory
rm(year,i, year_badFormat)
CO2<-CO2[complete.cases(CO2),]
#CO2 <- CO2 %>%select(-c('Country.Code', 'Indicator.Name', 'Indicator.Code'))
head(CO2_metadata)
#merge the data frames
CO2 <- left_join(CO2, CO2_metadata, by='Country.Code')
CO2
View(CO2_metadata)
CO2 <-CO2 %>% filter(Region !=NA)
CO2 <-CO2 %>% filter(!is.na(Region))
library(tidyverse)
CO2 <- read.csv('CO2_perYear.csv', skip=4)
CO2_metadata <- read.csv('CO2_countryMetaData.csv')
year<-c() # this is where the numeric year values will go
year_badFormat<-CO2 %>% select(starts_with("X")) %>% names() #creating a vector of the years as they are in the dataframe
#This for loop will take each object in year_badformat and get rid of the X and convert it to a numeric then add it to the year vector
for( i in 1:length(year_badFormat)){
year[i] = as.numeric(substring(year_badFormat[i], 2,5))
}
#Now we can change the column names to the year values as numeric
names(CO2)[5:length(names(CO2))]<-year
#Then get remove the objects we no longer need from memory
rm(year,i, year_badFormat)
CO2<-CO2[complete.cases(CO2),]
#CO2 <- CO2 %>%select(-c('Country.Code', 'Indicator.Name', 'Indicator.Code'))
head(CO2_metadata)
#merge the data frames
CO2 <- left_join(CO2, CO2_metadata, by='Country.Code')
CO2 <-CO2 %>% filter(!is.na(Region))
View(CO2)
CO2 <-CO2 %>% filter(!is.na(Region))
CO2 %>% filter(is.na(Region))
CO2 %>% filter(Region == NA)
CO2 %>% filter(Region == '')
CO2<-CO2 %>% filter(Region != '')
names(CO2)
CO2<-CO2 %>% filter(Region != '') %>% select(-c(SpecialNotes, TableName, X, Country.Code, Indicator.Code, Indicator.Name))
names(CO2)
summary(CO2)
unique(CO2$Region)
print(unique(CO2$Region))
length(unique(CO2$Region))
summary(CO2)
View(CO2)
#We also won't need the CO2_metadata file anymore
rm(CO2_metadata)
View(CO2)
library(tidyverse)
CO2 <- read.csv('rawData/CO2_perYear.csv', skip=4)
setwd("~/Desktop/GitHub/Digital-Tools-for-the-Sciences/rawData")
setwd("~/Desktop/GitHub/Digital-Tools-for-the-Sciences")
CO2 <- read.csv('/rawData/CO2_perYear.csv', skip=4)
CO2 <- read.csv('rawData/CO2_perYear.csv', skip=4)
#CO2 <- read.csv('rawData/CO2_perYear.csv', skip=4)
CO2_metadata <- read.csv('/rawData/CO2_countryMetaData.csv')
CO2 <- read_csv('rawData/CO2_perYear.csv', skip=4)
setwd("~/Desktop/GitHub/Digital-Tools-for-the-Sciences")
getwd()
ls
CO2 <- read_csv('rawData/CO2_perYear.csv', skip=4)
setwd("~/Desktop/GitHub/Digital-Tools-for-the-Sciences")
CO2 <- read_csv('/rawData/CO2_perYear.csv', skip=4)
CO2 <- read_csv('rawData/CO2_perYear.csv', skip=4)
getwd()
CO2 <- read_csv('/rawData/CO2_perYear.csv', skip=4)
setwd("~/Desktop/GitHub/Digital-Tools-for-the-Sciences/rawData")
write_csv(~/Desktop/GitHub/Digital-Tools-for-the-Sciences/)
write_csv(CO2,'~/Desktop/GitHub/Digital-Tools-for-the-Sciences/CO2EmissionsPerYear')
CO2 <- read_csv('Pop_perYear.csv', skip=4)
CO2_metadata <- read.csv('Pop_countryMetaData.csv')
Pop_metadata <- read.csv('Pop_countryMetaData.csv')
Pop <- read_csv('Pop_perYear.csv', skip=4)
Pop_metadata <- read.csv('Pop_countryMetaData.csv')
Pop <- read_csv('Pop_perYear.csv', skip=4)
Pop_metadata <- read.csv('Pop_countryMetaData.csv')
Pop <- read_csv('Pop_perYear.csv', skip=4)
Pop_metadata <- read.csv('Pop_countryMetaData.csv')
Pop <- read_csv('Pop_perYear.csv', skip=4)
Pop_metadata <- read.csv('Pop_countryMetaData.csv')
View(Pop)
names(Pop)
library(tidyverse)
CO2 <- read_csv('CO2_perYear.csv', skip=4)
CO2_metadata <- read.csv('CO2_countryMetaData.csv')
year<-c() # this is where the numeric year values will go
year_badFormat<-CO2 %>% select(starts_with("X")) %>% names() #creating a vector of the years as they are in the dataframe
#This for loop will take each object in year_badformat and get rid of the X and convert it to a numeric then add it to the year vector
for( i in 1:length(year_badFormat)){
year[i] = as.numeric(substring(year_badFormat[i], 2,5))
}
#Now we can change the column names to the year values as numeric
names(CO2)[5:length(names(CO2))]<-year
#Then get remove the objects we no longer need from memory
rm(year,i, year_badFormat)
CO2<-CO2[complete.cases(CO2),]
head(CO2_metadata)
#merge the data frames
CO2 <- left_join(CO2, CO2_metadata, by='Country.Code')
library(tidyverse)
CO2 <- read_csv('CO2_perYear.csv', skip=4)
CO2_metadata <- read.csv('CO2_countryMetaData.csv')
year<-c() # this is where the numeric year values will go
year_badFormat<-CO2 %>% select(starts_with("X")) %>% names() #creating a vector of the years as they are in the dataframe
#This for loop will take each object in year_badformat and get rid of the X and convert it to a numeric then add it to the year vector
for( i in 1:length(year_badFormat)){
year[i] = as.numeric(substring(year_badFormat[i], 2,5))
}
#Now we can change the column names to the year values as numeric
names(CO2)[5:length(names(CO2))]<-year
#Then get remove the objects we no longer need from memory
rm(year,i, year_badFormat)
CO2<-CO2[complete.cases(CO2),]
head(CO2_metadata)
#merge the data frames
CO2 <- left_join(CO2, CO2_metadata, by='Country.Code')
View(CO2)
View(CO2_metadata)
CO2 <- read_csv('CO2_perYear.csv', skip=4)
CO2_metadata <- read.csv('CO2_countryMetaData.csv')
library(tidyverse)
CO2 <- read.csv('CO2_perYear.csv', skip=4)
CO2_metadata <- read.csv('CO2_countryMetaData.csv')
year<-c() # this is where the numeric year values will go
year_badFormat<-CO2 %>% select(starts_with("X")) %>% names() #creating a vector of the years as they are in the dataframe
#This for loop will take each object in year_badformat and get rid of the X and convert it to a numeric then add it to the year vector
for( i in 1:length(year_badFormat)){
year[i] = as.numeric(substring(year_badFormat[i], 2,5))
}
#Now we can change the column names to the year values as numeric
names(CO2)[5:length(names(CO2))]<-year
#Then get remove the objects we no longer need from memory
rm(year,i, year_badFormat)
CO2<-CO2[complete.cases(CO2),]
head(CO2_metadata)
#merge the data frames
CO2 <- left_join(CO2, CO2_metadata, by='Country.Code')
#get rid of rows where Region value is empty, and get rid of unnecessary columns
CO2<-CO2 %>% filter(Region != '') %>% select(-c(SpecialNotes, TableName, X, Country.Code, Indicator.Code, Indicator.Name))
#We also won't need the CO2_metadata file anymore
rm(CO2_metadata)
write_csv(CO2,'~/Desktop/GitHub/Digital-Tools-for-the-Sciences/CO2EmissionsPerYear')
Pop <- read.csv('Pop_perYear.csv', skip=4)
Pop_metadata <- read.csv('Pop_countryMetaData.csv')
View(Pop)
yearformat(df){
yearformat<-function(df){
year<-c() # this is where the numeric year values will go
year_badFormat<-df %>% select(starts_with("X"))%>% names() #creating a vector of the years as they are in the dataframe
#This for loop will take each object in year_badformat and get rid of the X and convert it to a numeric then add it to the year vector
for( i in 1:length(year_badFormat)){
year[i] = as.numeric(substring(year_badFormat[i], 2,5))
}
#Now we can change the column names to the year values as numeric
names(df)[5:length(names(CO2))]<-year
#Then get remove the objects we no longer need from memory
rm(year,i, year_badFormat)
return(df)
}
CO2<-yearformat(CO2)
Pop<-yearformat(Pop)
View(Pop)
View(Pop)
yearformat<-function(df){
year<-c() # this is where the numeric year values will go
year_badFormat<-df %>% select(starts_with("X"))%>% names() #creating a vector of the years as they are in the dataframe
#This for loop will take each object in year_badformat and get rid of the X and convert it to a numeric then add it to the year vector
for( i in 1:length(year_badFormat)){
year[i] = as.numeric(substring(year_badFormat[i], 2,5))
}
#Now we can change the column names to the year values as numeric
names(df)[(length(names(df))-length(year_badFormat)):length(names(CO2))]<-year
#Then get remove the objects we no longer need from memory
rm(year,i, year_badFormat)
return(df)
}
CO2<-yearformat(CO2)
year_badFormat<-CO2 %>% select(starts_with("X"))%>% names()
names(CO2)
CO2 <- read.csv('CO2_perYear.csv', skip=4)
CO2_metadata <- read.csv('CO2_countryMetaData.csv')
yearformat<-function(df){
year<-c() # this is where the numeric year values will go
year_badFormat<-df %>% select(starts_with("X"))%>% names() #creating a vector of the years as they are in the dataframe
#This for loop will take each object in year_badformat and get rid of the X and convert it to a numeric then add it to the year vector
for( i in 1:length(year_badFormat)){
year[i] = as.numeric(substring(year_badFormat[i], 2,5))
}
#Now we can change the column names to the year values as numeric
names(df)[(length(names(df))-length(year_badFormat)):length(names(CO2))]<-year
#Then get remove the objects we no longer need from memory
rm(year,i, year_badFormat)
return(df)
}
CO2<-yearformat(CO2)
CO2 <- read.csv('CO2_perYear.csv', skip=4)
CO2_metadata <- read.csv('CO2_countryMetaData.csv')
year_badFormat<-CO2 %>% select(starts_with("X"))%>% names()
length(names(CO2))
length(year_badFormat)
yearformat<-function(df){
year<-c() # this is where the numeric year values will go
year_badFormat<-df %>% select(starts_with("X"))%>% names() #creating a vector of the years as they are in the dataframe
#This for loop will take each object in year_badformat and get rid of the X and convert it to a numeric then add it to the year vector
for( i in 1:length(year_badFormat)){
year[i] = as.numeric(substring(year_badFormat[i], 2,5))
}
#Now we can change the column names to the year values as numeric
names(df)[(length(names(df))-length(year_badFormat)+1):length(names(CO2))]<-year
#Then get remove the objects we no longer need from memory
rm(year,i, year_badFormat)
return(df)
}
CO2<-yearformat(CO2)
Pop<-yearformat(Pop)
Pop <- read.csv('Pop_perYear.csv', skip=4)
Pop_metadata <- read.csv('Pop_countryMetaData.csv')
Pop<-yearformat(Pop)
year_badFormat<-Pop %>% select(starts_with("X"))%>% names()
year<-c()
for( i in 1:length(year_badFormat)){
year[i] = as.numeric(substring(year_badFormat[i], 2,5))
}
names(Pop)
length(names(Pop))
length(year_badFormat)
64-6
length(names(Pop))-length(year_badFormat)
library(tidyverse)
CO2 <- read.csv('CO2_perYear.csv', skip=4)
CO2_metadata <- read.csv('CO2_countryMetaData.csv')
yearformat<-function(df){
year<-c() # this is where the numeric year values will go
year_badFormat<-df %>% select(starts_with("X"))%>% names() #creating a vector of the years as they are in the dataframe
#This for loop will take each object in year_badformat and get rid of the X and convert it to a numeric then add it to the year vector
for( i in 1:length(year_badFormat)){
year[i] = as.numeric(substring(year_badFormat[i], 2,5))
}
#Now we can change the column names to the year values as numeric
names(df)[(length(names(df))-length(year_badFormat)+1):length(names(df))]<-year
#Then get remove the objects we no longer need from memory
rm(year,i, year_badFormat)
return(df)
}
CO2<-yearformat(CO2)
CO2<-CO2[complete.cases(CO2),]
head(CO2_metadata)
#merge the data frames
CO2 <- left_join(CO2, CO2_metadata, by='Country.Code')
#get rid of rows where Region value is empty, and get rid of unnecessary columns
CO2<-CO2 %>% filter(Region != '') %>% select(-c(SpecialNotes, TableName, X, Country.Code, Indicator.Code, Indicator.Name))
#We also won't need the CO2_metadata file anymore
rm(CO2_metadata)
write_csv(CO2,'~/Desktop/GitHub/Digital-Tools-for-the-Sciences/CO2EmissionsPerYear')
Pop <- read.csv('Pop_perYear.csv', skip=4)
Pop_metadata <- read.csv('Pop_countryMetaData.csv')
Pop<-yearformat(Pop)
View(Pop)
Pop<-yearformat(Pop)%>% select(-c('2018', 'X'))
Pop<-yearformat(Pop)
library(tidyverse)
CO2 <- read.csv('CO2_perYear.csv', skip=4)
CO2_metadata <- read.csv('CO2_countryMetaData.csv')
yearformat<-function(df){
year<-c() # this is where the numeric year values will go
year_badFormat<-df %>% select(starts_with("X"))%>% names() #creating a vector of the years as they are in the dataframe
#This for loop will take each object in year_badformat and get rid of the X and convert it to a numeric then add it to the year vector
for( i in 1:length(year_badFormat)){
year[i] = as.numeric(substring(year_badFormat[i], 2,5))
}
#Now we can change the column names to the year values as numeric
names(df)[(length(names(df))-length(year_badFormat)+1):length(names(df))]<-year
#Then get remove the objects we no longer need from memory
rm(year,i, year_badFormat)
return(df)
}
CO2<-yearformat(CO2)
CO2<-CO2[complete.cases(CO2),]
head(CO2_metadata)
#merge the data frames
CO2 <- left_join(CO2, CO2_metadata, by='Country.Code')
#get rid of rows where Region value is empty, and get rid of unnecessary columns
CO2<-CO2 %>% filter(Region != '') %>% select(-c(SpecialNotes, TableName, X, Country.Code, Indicator.Code, Indicator.Name))
#We also won't need the CO2_metadata file anymore
rm(CO2_metadata)
write_csv(CO2,'~/Desktop/GitHub/Digital-Tools-for-the-Sciences/CO2EmissionsPerYear')
Pop <- read.csv('Pop_perYear.csv', skip=4)
Pop_metadata <- read.csv('Pop_countryMetaData.csv')
Pop<-yearformat(Pop)%>% select(-c('2018', 'X'))
library(tidyverse)
CO2 <- read.csv('CO2_perYear.csv', skip=4)
CO2_metadata <- read.csv('CO2_countryMetaData.csv')
yearformat<-function(df){
year<-c() # this is where the numeric year values will go
year_badFormat<-df %>% select(starts_with("X"))%>% names() #creating a vector of the years as they are in the dataframe
#This for loop will take each object in year_badformat and get rid of the X and convert it to a numeric then add it to the year vector
for( i in 1:length(year_badFormat)){
year[i] = as.numeric(substring(year_badFormat[i], 2,5))
}
#Now we can change the column names to the year values as numeric
names(df)[(length(names(df))-length(year_badFormat)+1):length(names(df))]<-year
#Then get remove the objects we no longer need from memory
rm(year,i, year_badFormat)
return(df)
}
CO2<-yearformat(CO2)
CO2<-CO2[complete.cases(CO2),]
head(CO2_metadata)
#merge the data frames
CO2 <- left_join(CO2, CO2_metadata, by='Country.Code')
#get rid of rows where Region value is empty, and get rid of unnecessary columns
CO2<-CO2 %>% filter(Region != '') %>% select(-c(SpecialNotes, TableName, X, Country.Code, Indicator.Code, Indicator.Name))
#We also won't need the CO2_metadata file anymore
rm(CO2_metadata)
write_csv(CO2,'~/Desktop/GitHub/Digital-Tools-for-the-Sciences/CO2EmissionsPerYear')
Pop <- read.csv('Pop_perYear.csv', skip=4)
Pop_metadata <- read.csv('Pop_countryMetaData.csv')
Pop<-yearformat(Pop)
View(Pop)
names(Pop)
Pop<-yearformat(Pop)
Pop <- Pop[,-63:64]
Pop<-yearformat(Pop)
Pop<-Pop[,-c(63,64)]
View(Pop)
summary(Pop)
Pop<-Pop[complete.cases(Pop),]
View(Pop)
Pop <- left_join(Pop, Pop_metadata, by='Country.Code')
View(Pop_metadata)
View(Pop)
names(pop)
names(Pop)
#get rid of rows where Region value is empty, and get rid of unnecessary columns
Pop<-Pop %>% filter(Region != '') %>% select(-c(SpecialNotes, TableName, X, Country.Code, Indicator.Code, Indicator.Name))
names(Pop)
rm(Pop_metadata)
write_csv(Pop,'~/Desktop/GitHub/Digital-Tools-for-the-Sciences/PopEmissionsPerYear')
View(CO2)
write_csv(Pop,'~/Desktop/GitHub/Digital-Tools-for-the-Sciences/PopTotalPerYear')
library(tidyverse)
CO2 <- read.csv('CO2_perYear.csv', skip=4)
CO2_metadata <- read.csv('CO2_countryMetaData.csv')
yearformat<-function(df){
year<-c() # this is where the numeric year values will go
year_badFormat<-df %>% select(starts_with("X"))%>% names() #creating a vector of the years as they are in the dataframe
#This for loop will take each object in year_badformat and get rid of the X and convert it to a numeric then add it to the year vector
for( i in 1:length(year_badFormat)){
year[i] = as.numeric(substring(year_badFormat[i], 2,5))
}
#Now we can change the column names to the year values as numeric
names(df)[(length(names(df))-length(year_badFormat)+1):length(names(df))]<-year
#Then get remove the objects we no longer need from memory
rm(year,i, year_badFormat)
return(df)
}
CO2<-yearformat(CO2)
CO2<-CO2[complete.cases(CO2),]
head(CO2_metadata)
#merge the data frames
CO2 <- left_join(CO2, CO2_metadata, by='Country.Code')
#get rid of rows where Region value is empty, and get rid of unnecessary columns
CO2<-CO2 %>% filter(Region != '') %>% select(-c(SpecialNotes, TableName, X, Country.Code, Indicator.Code, Indicator.Name))
#We also won't need the CO2_metadata file anymore
rm(CO2_metadata)
write_csv(CO2,'~/Desktop/GitHub/Digital-Tools-for-the-Sciences/CO2EmissionsPerYear')
Pop <- read.csv('Pop_perYear.csv', skip=4)
Pop_metadata <- read.csv('Pop_countryMetaData.csv')
Pop<-yearformat(Pop)
Pop<-Pop[,-c(63,64)] #the last two columns do not have data
Pop<-Pop[complete.cases(Pop),]
Pop <- left_join(Pop, Pop_metadata, by='Country.Code')
#get rid of rows where Region value is empty, and get rid of unnecessary columns
Pop<-Pop %>% filter(Region != '') %>% select(-c(SpecialNotes, TableName, X, Country.Code, Indicator.Code, Indicator.Name))
rm(Pop_metadata)
write_csv(Pop,'~/Desktop/GitHub/Digital-Tools-for-the-Sciences/PopTotalPerYear')
#install.packages('reshape')
library(reshape)
Pop<-melt(Pop, id.vars=c("Country.Name", "IncomeGroup","Region"))
CO2<-melt(CO2, id.vars=c("Country.Name", "IncomeGroup","Region"))
colnames(CO2)[4:5]<-c("Year", "CO2")
colnames(Pop)[4:5]<-c("Year", "Pop")
FinalData <- full_join(CO2, Pop, by=c("Country.Name", "Year", "IncomeGroup", "Region"))
FinalData<-drop_na(FinalData)
summary(FinalData)
write.csv(FinalData,'DataSet.csv')
View(FinalData)
View(FinalData)
FinalData<-drop_na(FinalData)
##change FinalData column CO2 to CO2perCap
names(FinalData)[5]<-"CO2perCap"
summary(FinalData)
write.csv(FinalData,'DataSet.csv')
write.csv(FinalData,'DataSet.csv', row.names=FALSE)
